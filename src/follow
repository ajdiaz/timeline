## vim:ft=sh

# fun: follow_list <path>
# txt: given a path get the submodules into FOLLOW directory
follow_list ()
{
  local line path="$1"

  while read -r line; do
    line="${line#*${TIMELINE_FOLLOW}/}"
    case "$line" in
      *'.url='*)
        echo "${line%.url=*}" "${line#*.url=}"
      ;;
    esac
  done < <(command git -C "$path" config -f .gitmodules -l 2>/dev/null)
}


# fun: follow_add <pull_url> [name]
# txt: Add new following using pull_url passed as argument. Optional name
#      will add a config entry for user alias to this name.
follow_add ()
{
  local pull_url="${1}" name="$2"
  oid "$pull_url"
  
  command git -C "${ACCOUNT_PATH}" submodule add \
    "$pull_url" "${TIMELINE_FOLLOW}/${OID_CACHE["$pull_url"]}"
  command git -C "${ACCOUNT_PATH}" submodule init
  command git -C "${ACCOUNT_PATH}" submodule update --remote

  account_commit "follow: add ${OID_CACHE["${pull_url}"]}"
  account_push

  if [[ "$name" ]]; then
    config_set "user.alias-${OID_CACHE["$pull_url"]}" "$name"
    config_save "${CONFIG_FILE}"
  fi

}

# fun: follow_del <uid>
# txt: remove following for user identified by specific UID
follow_del ()
{
  local uid="$1"

  mpath="${TIMELINE_FOLLOW}/$uid"

  # remove gitconfig sections
  mute command git -C "$ACCOUNT_PATH" config -f .git/config \
    --remove-section "submodule.$mpath"

  mute command git -C "$ACCOUNT_PATH" config -f .gitmodules \
    --remove-section "submodule.$mpath"

  account_commit "follow: del "${uid}

  command git -C "$ACCOUNT_PATH" rm --cached "$mpath"
  rm -rf "${ACCOUNT_PATH:?}/.git/modules/$mpath"
 
  if [[ -d "$ACCOUNT_PATH/$mpath" ]]; then
    rm -rf "${ACCOUNT_PATH:?}/${mpath:?}"
  fi

  account_push
}
