.\" Automatically generated by Pandoc 2.13
.\"
.TH "TL-ACCOUNT" "1" "2021-05-31" "Timeline v1.8-19-g6d07d9c" "Timeline Manual"
.hy
.SH NAME
.PP
tl-account - Manage your Timeline accounts
.SH SYNOPSYS
.PP
\f[I]tl-account\f[R]
{create|delete|rebuild|clone|list|refresh|active|preview} {args\&...}
.SH DESCRIPTION
.PP
Manage the accounts for Timeline.
This command has a number of subcommands depending of the action to do.
Each subcommands has its own parameters:
.TP
\f[B]create\f[R] [--keyid <keyid>] <name> <push_url> <pull_url> [<path>]
Create a new empty account (aka git repository) which will push data to
specified push_url and publish public url as specified pull_url.
Optionally, you can set the pat where repository lives, if omit, uses
default path for accounts (see \f[B]FILES\f[R] below).
The \f[I]--keyid\f[R] flag sets a GPG keyid for signing commits, if not
present \f[I]tl\f[R] will create one for you (read
\f[B]tl-crypto\f[R](7) for more information).
.TP
\f[B]delete\f[R] [--force] <name>
Delete the account with name passed as argument.
If \f[I]--force\f[R] parameter is present, then ignore if account path
exists or not, otherwise account delete will not delete anything if path
does not exists.
\f[B]CAUTION: this action cannot be undone.\f[R]
.TP
\f[B]rebuild\f[R] <name>
Recreate an account previously created.
This command will use config data to regenerate the account.
This command is intended to use when you accidentaly remove the contents
of your account directory.
.TP
\f[B]clone\f[R] [--keyid <keyid>] <name> <push_url> <pull_url> [<path>]
Similar to \f[B]create\f[R], but use a previously initilizated and
remote repository instead of create new empty one.
.TP
\f[B]list\f[R]
Return a list of configured accounts.
.TP
\f[B]active\f[R] name
Switch to account passed as argument, or, if none, load the default
account.
Default account when more than one is created will be specified by
configuration parameter called \f[I]account.default\f[R].
See \f[B]tl-config\f[R](1) for more information about how to configure
parameters.
.TP
\f[B]keyid\f[R] <keyid>
Set the GPG KeyID to sign commits for the current active account.
You can use this command to set a key in account previously created but
where KeyID was not configured.
.TP
\f[B]genkey\f[R]
Generate a timeline keypair instead of configurig external one with
\f[B]keyid\f[R] to sign and encrypt messages.
.TP
\f[B]refresh\f[R]
Pull changes from the remote repository.
This action should be automatically and you should not use it manually.
But, if you need it, here it is.
.TP
\f[B]preview\f[R] <url>
Preview the contents of a remote account given its URL.
This command allows you to explore a remote account without following
it.
.SH CONFIGURATION SETTINGS
.PP
The \f[B]account\f[R] command accept the following configuration
settings that you can set using \f[B]tl-config\f[R](1) command:
.TP
\f[I]account.auto-push\f[R]=\f[I]true\f[R]
If \f[I]true\f[R] (by default) always push a commit after created a new
event or action in the account.
.TP
\f[I]account.content-markdown\f[R]=\f[I]true\f[R]
If \f[I]true\f[R] (by default) also generate \f[B]CONTENT.md\f[R] file
in the repository with Markdown format, intended to be served in Gemini
server.
.TP
\f[I]account.preview-depth\f[R]=\f[I]100\f[R]
Set the number (integer) of depth that a preview can go.
This means that you can only see this maximum number of post in a
command \f[B]account preview\f[R].
.TP
\f[I]account.default\f[R]
Set the name of the default account if you have a multi account setup.
.TP
\f[I]account.keyid\f[R]
Set the default KeyID for all accounts.
It is recommended to set this paramenter by account using the
\f[B]account keyid\f[R] command.
.TP
\f[I]account.max-posts\f[R]=\f[I]20\f[R]
The the number (integer) of posts that will be shown for every account.
No more that this number will be show for each configured follow or
account.
.TP
\f[I]account.path\f[R]=\f[I]\f[R]X\f[I]\f[R]D\f[I]\f[R]G\f[I]~\f[R]D\f[I]~\f[R]A\f[I]\f[R]T\f[I]\f[R]A\f[I]~\f[R]H\f[I]~\f[R]O\f[I]\f[R]M\f[I]\f[R]E\f[I]/\f[R]t\f[I]\f[R]l\f[I]/\f[R]a\f[I]\f[R]c\f[I]\f[R]c\f[I]\f[R]o\f[I]\f[R]u\f[I]\f[R]n\f[I]\f[R]t\f[I]/:HOME/.tl/account\f[R]
The path where account repositories will be kept.
The path will be evaluated in order, but new accounts will be created in
the first one.
.PP
All this variables can also set by specific account, for example for
KeyID: \f[I]account.XXX.keyid\f[R] will be used for account called
\f[I]XXX\f[R].
Note that configuration for account expect the user name of the account
(friendly name) not the OID.
.SH ENVIRONMENT VARIALES
.TP
\f[I]TIMELINE_EXPERIMENTAL_SHA256\f[R]
Enable experimental feature of SHA256 hashed git objects.
See \f[B]NOTES\f[R] below.
.SH FILES
.TP
\f[I]$XDG_CONFIG_HOME/tl/config\f[R]
The main configuration file for timeline.
.TP
\f[I]$XDG_DATA_HOME/tl/account/\f[R]
Default directory where your account\[cq]s repositories live.
.SH NOTES
.IP "1." 3
Currently Timeline uses SHA-1 objects in git repo, which is the git
recommendation.
But git also support SHA-256 objects since version 2.19.
In the future this could be change and repositories will be
incompatible.
If you want to be one step ahead, at your risk, you can set the
enviroment variable \f[I]TIMELINE_EXPERIMENTAL_SHA256\f[R] to true (or
any value different that empty string) to enable SHA256 objects.
This value only make sense with \f[B]acount create\f[R].
See \f[B]git-init\f[R](1) for more information.
.IP "2." 3
The use of GPG signature for commits relies on git and gpg, so you need
to have a GnuPG version installed on your systems to use this feature.
.SH SEE ALSO
.PP
\f[B]tl-tutorial\f[R](7), \f[B]timeline\f[R](7), \f[B]tl\f[R](1),
\f[B]tl-user\f[R](1), \f[B]tl-config\f[R](1), \f[B]tl-crypto\f[R](1),
\f[B]gpg\f[R](1)
.SH TIMELINE
.PP
Part of the \f[B]tl\f[R](1) suite.
