.\" Automatically generated by Pandoc 2.14.0.1
.\"
.TH "TL-ACCOUNT" "1" "2021-06-09" "Timeline v1.8-27-g0ffa587" "Timeline Manual"
.hy
.SH NAME
.PP
tl-account - Manage your Timeline accounts
.SH SYNOPSYS
.PP
\f[I]tl-account\f[R]
{create|delete|rebuild|clone|list|refresh|active|preview|keys|keygen|keyrevoke|encrkey|signkey}
{args\&...}
.SH DESCRIPTION
.PP
Manage the accounts for Timeline.
This command has a number of subcommands depending on the action to do.
Each subcommands has its own parameters:
.TP
\f[B]create\f[R] <name> <push_url> <pull_url> [<path>]
Create a new empty account (aka git repository) which will push data to
specified \f[I]push_url\f[R] and publish public URL as specified
\f[I]pull_url\f[R].
Optionally, you can set the pat where repository lives, if omitted, uses
default path for accounts (see \f[B]FILES\f[R] below).
This step will also create a key pair for sign and encrypt events (see
\f[B]tl-crypto\f[R](1) for more information), unless the configuration
parameter \f[I]account.auto-keygen\f[R] is set to false.
.TP
\f[B]delete\f[R] [--force] <name>
Delete the account with name passed as argument.
If \f[I]--force\f[R] parameter is present, then ignore if account path
exists or not, otherwise account delete will not delete anything if path
does not exist.
\f[B]CAUTION: this action cannot be undone.\f[R]
.TP
\f[B]rebuild\f[R] <name>
Recreate an account previously created.
This command will use configuration data to regenerate the account.
This command is intended to use when you accidentally remove the
contents of your account directory.
Please note that this command cannot regenerate your keyring, that
means, in practice, that if you remove your keyring storage directory
too you will lose access to old encrypted messages.
.TP
\f[B]clone\f[R] <name> <push_url> <pull_url> [<path>]
Similar to \f[B]create\f[R], but use a previously initialized and remote
repository instead of create new empty one.
.TP
\f[B]list\f[R]
Return a list of configured accounts.
.TP
\f[B]refresh\f[R]
Pull changes from the remote repository.
This action should be automatically, and you should not use it manually.
But, if you need it, here it is.
This action also update the account keyring with the new keys imported
from follows, unless the configuration option
\f[I]crypto.auto-import\f[R] is set to false.
.TP
\f[B]active\f[R] name
Switch to account passed as argument, or, if none, load the default
account.
Default account when more than one is created will be specified by
configuration parameter called \f[I]account.default\f[R].
See \f[B]tl-config\f[R](1) for more information about how to configure
parameters are used.
.TP
\f[B]preview\f[R] <url>
Preview the contents of a remote account given its URL.
This command allows you to explore a remote account without following
it.
.TP
\f[B]keys\f[R]
List the current secret keys available for the account.
The flags \f[I]S\f[R] and \f[I]E\f[R] at the right of the KeyID will
indicate the default key for sign and encrypt, respectively.
.TP
\f[B]keygen\f[R] [\[en]no-default-sign] [\[en]no-default-encr]
Generate a timeline key pair to encrypt and sign events in the current
active account.
By default the generated key is set as default key for sign and encrypt,
unless \f[I]\[en]no-default-sign\f[R] or \f[I]\[en]no-default-encr\f[R].
.TP
\f[B]keyrevoke\f[R] [\[en]force] <KeyID>
Revoke the KeyID you pass as argument.
Please note that you cannot revoke current default key for sign or
encrypt (well, actually you can if \f[C]--force\f[R] option is present,
but you should generate a new key pair before).
.TP
\f[B]encrkey\f[R] <KeyID>
Set the provided Keyid as default encryption key for the current
account.
.TP
\f[B]signkey\f[R] <KeyID>
Set the provided Keyid as default sign key for the current account.
.SH CONFIGURATION SETTINGS
.PP
The \f[B]account\f[R] command accept the following configuration
settings that you can set using \f[B]tl-config\f[R](1) command:
.TP
\f[I]account.auto-push\f[R]=\f[I]true\f[R]
If \f[I]true\f[R] (by default) always push a commit after created a new
event or action in the account.
.TP
\f[I]account.auto-keygen\f[R]=\f[I]true\f[R]
If \f[I]true\f[R] (by default) always create a key pair on
\f[I]create\f[R], \f[I]clone\f[R] and \f[I]rebuild\f[R] (in this case
only if no previous one found).
.TP
\f[I]account.content-markdown\f[R]=\f[I]true\f[R]
If \f[I]true\f[R] (by default) also generate \f[B]CONTENT.md\f[R] file
in the repository with Markdown format, intended to be served in Gemini
server.
.TP
\f[I]account.preview-depth\f[R]=\f[I]100\f[R]
Set the number (integer) of depth that a preview can go.
This means that you can only see this maximum number of post in a
command \f[B]account preview\f[R].
.TP
\f[I]account.default\f[R]
Set the name of the default account if you have a multi account setup.
.TP
\f[I]account.signkey\f[R]
Set the default sign KeyID for all accounts.
It is recommended to set this parameter by account using the
\f[B]account signkey\f[R] command.
YOU SHOULD AVOID CHANGING THIS SET MANUALLY, because the sign key setted
for an account is also saved locally in the account repository work
tree.
.TP
\f[I]account.encrkey\f[R]
Set the default encryption KeyID for all accounts.
It is recommended to set this parameter by account using the
\f[B]account encrkey\f[R] command.
.TP
\f[I]account.encrypt-to-me\f[R]=\f[I]true\f[R]
If \f[I]true\f[R] (the default) when post an encrypted event, the event
will also be encrypted to you as recipient, so you can also see your
event in your timeline.
.TP
\f[I]account.max-posts\f[R]=\f[I]20\f[R]
The number (integer) of posts that will be shown for every account.
No more that this number will be show for each configured follow or
account.
.TP
\f[I]account.path\f[R]=\f[I]\f[R]X\f[I]\f[R]D\f[I]\f[R]G\f[I]~\f[R]D\f[I]~\f[R]A\f[I]\f[R]T\f[I]\f[R]A\f[I]~\f[R]H\f[I]~\f[R]O\f[I]\f[R]M\f[I]\f[R]E\f[I]/\f[R]t\f[I]\f[R]l\f[I]/\f[R]a\f[I]\f[R]c\f[I]\f[R]c\f[I]\f[R]o\f[I]\f[R]u\f[I]\f[R]n\f[I]\f[R]t\f[I]/:HOME/.tl/account\f[R]
The path where account repositories will be kept.
The path will be evaluated in order, but new accounts will be created in
the first one.
.TP
\f[I]account.keyring\f[R]
Set the path of the keyring for account.
For security reasons, global keyring for all accounts will be ignored.
Per account set is created prefixing to the name of the account the
first path found in setting \f[I]crypto.keyring-path\f[R].
See \f[B]tl-crypto\f[R](7) for more information.
.SS Per account variables
.PP
All these variables can also set by specific account, for example for
KeyID: \f[I]account.XXX.keyid\f[R] will be used for account called
\f[I]XXX\f[R].
Note that configuration for account expect the username of the account
(friendly name) not the OID.
.SH ENVIRONMENT VARIABLES
.TP
\f[I]TIMELINE_EXPERIMENTAL_SHA256\f[R]
Enable experimental feature of SHA256 hashed git objects.
See \f[B]NOTES\f[R] below.
.SH FILES
.TP
\f[I]$XDG_CONFIG_HOME/tl/config\f[R]
The main configuration file for timeline.
.TP
\f[I]$XDG_DATA_HOME/tl/account/\f[R]
Default directory where your account\[cq]s repositories live.
.SH NOTES
.IP "1." 3
Currently, Timeline uses SHA-1 objects in git repository, which is the
git recommendation.
But git also support SHA-256 objects since version 2.19.
In the future this could be change and repositories will be
incompatible.
If you want to be one step ahead, at your risk, you can set the
environment variable \f[I]TIMELINE_EXPERIMENTAL_SHA256\f[R] to true (or
any value different that empty string) to enable SHA256 objects.
This value only make sense with \f[B]account create\f[R].
See \f[B]git-init\f[R](1) for more information.
.IP "2." 3
The use of GPG signature for commits relies on Git and GPG, so you need
to have a GnuPG version installed on your systems to use this feature.
The encryption feature relies only in GPG.
.SH SEE ALSO
.PP
\f[B]tl-tutorial\f[R](7), \f[B]timeline\f[R](7), \f[B]tl\f[R](1),
\f[B]tl-user\f[R](1), \f[B]tl-config\f[R](1), \f[B]tl-crypto\f[R](7),
\f[B]gpg\f[R](1)
.SH TIMELINE
.PP
Part of the \f[B]tl\f[R](1) suite.
